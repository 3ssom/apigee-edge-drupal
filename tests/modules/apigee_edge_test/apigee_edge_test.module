<?php

/**
 * @file
 * Copyright 2018 Google Inc.
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License version 2 as published by the
 * Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */

/**
 * @file
 * Helper module for the apigee_edge tests.
 */

use Drupal\apigee_edge_test\Entity\OverriddenApiProduct;
use Drupal\apigee_edge_test\Entity\OverriddenDeveloper;
use Drupal\apigee_edge_test\Entity\OverriddenDeveloperApp;
use Drupal\apigee_edge_test\Entity\Storage\DeveloperAppStorage;
use Drupal\apigee_edge_test\Plugin\KeyProvider\TestEnvironmentVariablesKeyProvider;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\user\UserInterface;

/**
 * Implements hook_apigee_edge_my_developer_apps_title_alter().
 *
 * Tests "My developer apps" title alter hook.
 *
 * @see \Drupal\Tests\apigee_edge\Functional\DeveloperAppUITest
 */
function apigee_edge_test_apigee_edge_my_developer_apps_title_alter(TranslatableMarkup &$title, ?UserInterface $user = NULL) {
  $title = new TranslatableMarkup('Foo @original', [
    '@original' => $title,
  ]);
}

/**
 * Implements hook_entity_type_alter().
 */
function apigee_edge_test_entity_type_alter(array &$entity_types) {
  /* @var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
  foreach (_apigee_edge_entity_class_mapping() as $entity_type => $entity_class) {
    if (isset($entity_types[$entity_type])) {
      $entity_types[$entity_type]->setClass($entity_class);
    }
  }

  $entity_types['developer_app']->setStorageClass(DeveloperAppStorage::class);
}

/**
 * A list of entity types and class overrides.
 *
 * @return array
 *   Override map.
 */
function _apigee_edge_entity_class_mapping(): array {
  return [
    'developer' => OverriddenDeveloper::class,
    'developer_app' => OverriddenDeveloperApp::class,
    'api_product' => OverriddenApiProduct::class,
  ];
}

/**
 * Implements hook_key_provider_info_alter().
 */
function apigee_edge_test_key_provider_info_alter(array &$key_providers) {
  // Use a custom key provider so we can deal with state during testing.
  $key_providers['apigee_edge_environment_variables']['class'] = TestEnvironmentVariablesKeyProvider::class;
}
